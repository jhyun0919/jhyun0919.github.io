<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Park's Archive</title>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <link>http://localhost:4000/</link>
    <description>A website with blog posts and pages</description>
    <pubDate>Thu, 07 Jan 2021 17:30:53 -0600</pubDate>
    
      <item>
        <title></title>
        <link>/2021/01/07/2020-12-15-Cascading-Outage-Sim-QSS.html</link>
        <guid isPermaLink="true">/2021/01/07/2020-12-15-Cascading-Outage-Sim-QSS.html</guid>
        <description>&lt;p&gt;pros and cons of various cascading outage simulators.&lt;/p&gt;
</description>
        <pubDate>Thu, 07 Jan 2021 17:30:53 -0600</pubDate>
      </item>
    
      <item>
        <title>(Research Proj) Cascading Outage Simulator - Dynamic</title>
        <link>/research/energy/2021/01/05/Cascading-Outage-Sim-Dynamic.html</link>
        <guid isPermaLink="true">/research/energy/2021/01/05/Cascading-Outage-Sim-Dynamic.html</guid>
        <description>&lt;hr /&gt;

&lt;h1 id=&quot;1-cascading-outage-simulator&quot;&gt;1. CASCADING OUTAGE SIMULATOR&lt;/h1&gt;

&lt;p&gt;The vital significance of studying cascading outages has been recognized [].&lt;/p&gt;

&lt;p&gt;However, since electrical power networks are very large and complex systems [], understanding the many mechanisms by which cascading outages propagate is challenging.&lt;/p&gt;

&lt;p&gt;Cadcading outage simulators allow us to study a wide variety of different mechanisms of cascading outages.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-in-this-paper&quot;&gt;2. IN THIS PAPER&lt;/h1&gt;

&lt;p&gt;This paper presents the design of and results from a new non-linear dynamic model of cascading failure in power system, &lt;strong&gt;“Cascading Outage Simulator with Multiprocess Integration Capabilities” (COSMIC)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In COSMIC, …&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Dynamic components&lt;/strong&gt; are modeled using &lt;strong&gt;differential equations&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Power flows&lt;/strong&gt; are represented using &lt;strong&gt;non-linear power flow equations&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Discrete changes&lt;/strong&gt; (e.g., components failures, load shedding) are described by &lt;strong&gt;a set of equations (constraints)&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given dynamic data for a power system and a set of exogenous disturbances that may trigger a cascade, COSMIC uses a recursive process to compute the impact of the triggering event by solving the differential-algebraic equations (DAEs).&lt;/p&gt;

&lt;p&gt;Benefits&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;providing an open platform for research and development that allows one to explicitly test the impact of the many assumptions that are necessary for dynamic cascading failure modeling. e.g. users can modify the existing system components, add new ones, and integrate advanced remedial control actions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;the dynamic/adaptive time step and recursive islanded time horizons implemented in this simulator allow for faster computations during, near, steady-state regimes, and fine resolution during transient phases.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;can be easily integrated with High Performance Computing (HPC) clusters to run many simulations simultaneously at a much lower cost.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;3-hybrid-system-modeling-in-cosmic&quot;&gt;3. HYBRID SYSTEM MODELING IN COSMIC&lt;/h1&gt;

&lt;h2 id=&quot;a-hybrid-differential-algebraic-formulation&quot;&gt;A. Hybrid differential-algebraic formulation&lt;/h2&gt;

&lt;p&gt;Dynamic power networks are modeled as sets of DAEs.&lt;/p&gt;

&lt;h3 id=&quot;a-set-of-differential-equations&quot;&gt;A set of Differential equations&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{d\mathbf{x}}{dt}=\mathbf{f}(t, \mathbf{x}(t), \mathbf{y}(t), \mathbf{z}(t)) \tag{1}&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;$\mathbf{x}$ is a vector of continuous state variables that change with time according to a set of differential equations.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;(1) represent the machine dynamics.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;check appendix for more details.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;a-set-of-algebraic-equations&quot;&gt;A set of Algebraic equations&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\mathbf{g}(t, \mathbf{x}(t), \mathbf{y}(t), \mathbf{z}(t)) =0 \tag{2}&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;$\mathbf{y}$ is a vector fo continuous state variables that have pure algebraic relationships to other variables in the system.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;(2) encapsulate the standard ac power flow equations.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;load models are an important part of the algebraic equations. (ZIPE)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/COSMIC_load_type.png&quot; width=&quot;666&quot; /&gt;   &lt;figcaption&gt;
Figure 1. Illustrates a dramatic impact of load models on algebraic convergence. [1]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;a-set-of-constarints&quot;&gt;A set of Constarints&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\mathbf{h}(t, \mathbf{x}(t), \mathbf{y}(t), \mathbf{z}(t))&lt;0 \tag{3} %]]&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;$\mathbf{z}$ is a vector of state variables that can only take integer states $( z_i ∈ [0, 1])$.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;constraints $\mathbf{h_i}(…)&amp;lt;0$ fails, an associated counter function $\mathbf{d_i}$ activates.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;During cascading failures, power systems undergo many discrete changes.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;exogenous events (e.g., manual operations, weather)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;endogenous events (e.g., automatic protective relay actions)&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The discrete event(s) will consequently change algebraic equations and the systems dynamic response, which may result in cascading failures, system islanding, and large blackouts.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;b-relay-modeling&quot;&gt;B. Relay modeling&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Major disturbances cause system oscillations as the system seeks a new equilibrium.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;These oscillations may naturally die out due to the interactions of system inertia, damping, and exciter and governor controls.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In order to ensure that relays do not trip due to brief transient state changes, time-delays are added to each protective relay in COSMIC.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We implemented in this model two types of time-delayed triggering algorithms:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;fixed-time delay&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://www.electrical4u.com/inverse-time-relay-definite-time-lag-relay/&quot;&gt;time-inverse delay&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Five types of protective relays are modeled in COSMIC:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;over-current (OC) relays&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;distance (DIST) relays&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;temperature (TEMP) relays&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;under-voltage load shedding (UVLS) relays&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;under-frequency load shedding (UFLS)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;c-solving-the-hybrid-dae&quot;&gt;C. Solving the hybrid DAE&lt;/h2&gt;

&lt;p&gt;Because of its numerical stability advantages, COSMIC uses the trapezoidal rule to simultaneously integrate and solve the differential and algebraic equations.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;0 = \mathbf{x} + \frac{t_d-d}{2} [\mathbf{f}+\mathbf{f}(t_d, \mathbf{x}_d, \mathbf{y}_d, \mathbf{z}_d)] \tag{4}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;0=\mathbf{g}(t_d, \mathbf{x}_+, \mathbf{y}_+, \mathbf{z}) \tag{5}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;0&gt;\mathbf{h}(t_d, \mathbf{x}_+, \mathbf{y}_+) \tag{6}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;0=\mathbf{d}(t_d, \mathbf{x}_+, \mathbf{y}_+) \tag{7}&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Whereas many of the common tools in the literature use a fixed time step-size, COSMIC implements a variable time step-size in order to trade-off between the diverse time-scales of the dynamics that we implement.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TRADE-OFF&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;small&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;large&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;trapezoidal-rule&quot;&gt;Trapezoidal Rule&lt;/h3&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/Trapezoidal_Rule.png&quot; width=&quot;600&quot; /&gt;   &lt;figcaption&gt;
Figure . Trapezoidal Rule []
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\int_{a}^{b} f(x) \,dx = \frac{\Delta x}{2}[f(x_0) + 2f(x_1) +... + 2f(x_{n-1}) + f(x_n)]&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;simulation-algorithm&quot;&gt;Simulation Algorithm&lt;/h3&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/Algorithm.png&quot; width=&quot;555&quot; /&gt;   &lt;figcaption&gt;
Figure . Algorithm [1]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/COSMIC_Flowchart.png&quot; width=&quot;900&quot; /&gt;   &lt;figcaption&gt;
Figure . Algorithm Flowchart []
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;d-validation&quot;&gt;D. Validation&lt;/h2&gt;

&lt;p&gt;To validate COSMIC, we compared the dynamic response in COSMIC against commercial software—PowerWorld— using the classic 9-bus test case.&lt;/p&gt;

&lt;p&gt;From a random contingency simulation, the Mean Absolute Error (MAE) between the results produced by COSMIC and PowerWorld was within 0.11%.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;4-experiments-and-results&quot;&gt;4. EXPERIMENTS AND RESULTS&lt;/h1&gt;

&lt;p&gt;Three test systems are prepared:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;9-bus system&lt;/li&gt;
  &lt;li&gt;39-bus system&lt;/li&gt;
  &lt;li&gt;2383-bus system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;a-polar-formulation-vs-rectangular-formulation-in-computational-efficiency&quot;&gt;A. Polar formulation vs. Rectangular formulation in computational efficiency&lt;/h2&gt;

&lt;h3 id=&quot;purpose&quot;&gt;Purpose&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;To compare the computational efficiency of the two formulations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;used-test-systems&quot;&gt;Used test systems&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;the 39-bus system&lt;/li&gt;
  &lt;li&gt;the 2383-bus system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;results&quot;&gt;Results&lt;/h3&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/rect_polar_performance.png&quot; width=&quot;600&quot; /&gt;   &lt;figcaption&gt;
Figure . performance [1]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;b-relay-event-illustration&quot;&gt;B. Relay event illustration&lt;/h2&gt;

&lt;h3 id=&quot;purpose-1&quot;&gt;Purpose&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;To depict the functionality of how protective relays integrate with COSMIC’s time delay features.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;used-test-systems-1&quot;&gt;Used test systems&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;the 9-bus system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;results-1&quot;&gt;Results&lt;/h3&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/Relay_Events.png&quot; width=&quot;600&quot; /&gt;   &lt;figcaption&gt;
Figure . Relay Events [1]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;c-cascading-outage-examples&quot;&gt;C. Cascading outage examples&lt;/h2&gt;

&lt;h3 id=&quot;purpose-2&quot;&gt;Purpose&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;To demonstrates cascading outage examples.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;used-test-systems-2&quot;&gt;Used test systems&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;the 39-bus system&lt;/li&gt;
  &lt;li&gt;the 2383-bus system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;results-2&quot;&gt;Results&lt;/h3&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/39Bus_Case_Cascading_Outage_Example.png&quot; width=&quot;600&quot; /&gt;   &lt;figcaption&gt;
Figure . 39-Bus Case Cascading Outage Example [1]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/2383Bus_Case_Cascading_Outage_Example.png&quot; width=&quot;600&quot; /&gt;   &lt;figcaption&gt;
Figure . 2383-Bus Case Cascading Outage Example[1]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/Branch_Outage_and_Load_Shedding.png&quot; width=&quot;900&quot; /&gt;   &lt;figcaption&gt;
Figure . [1]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;d-n-2-contingency-analysis&quot;&gt;D. N-2 contingency analysis&lt;/h2&gt;

&lt;h3 id=&quot;purpose-3&quot;&gt;Purpose&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;For contingency analysis&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;used-test-systems-3&quot;&gt;Used test systems&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;the 2383-bus system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;results-3&quot;&gt;Results&lt;/h3&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/CCDF_Demand_Loss.png&quot; width=&quot;600&quot; /&gt;   &lt;figcaption&gt;
Figure . CCDF Demand Loss [1]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/CCDF_Event_Length.png&quot; width=&quot;600&quot; /&gt;   &lt;figcaption&gt;
Figure . CCDF Event Length [1]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/CCDF_Number_of_Branch_Outages.png&quot; width=&quot;600&quot; /&gt;   &lt;figcaption&gt;
Figure . CCDF Number of Branch Outages [1]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;e-comparison-with-a-dc-cascading-outage-simulator&quot;&gt;E. Comparison with a dc cascading outage simulator&lt;/h2&gt;

&lt;h3 id=&quot;purpose-4&quot;&gt;Purpose&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;To compare COSMIC vs. DC Simulator.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;used-test-systems-4&quot;&gt;Used test systems&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;the 2383-bus system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;results-4&quot;&gt;Results&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The probabilities of demand losses&lt;/li&gt;
&lt;/ul&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/CCDF_COSMIC_vs_DC.png&quot; width=&quot;600&quot; /&gt;   &lt;figcaption&gt;
Figure . CCDF Demand Loss for COSMIC &amp;amp; DC Simulator [1]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Path Agreement Measurement&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;R(m_1, m_2) = \sum_{i=1}^{|C|}\frac{1}{C} \frac{|A_i \cap B_i|}{|A_i \cup B_i|} \tag{8}&lt;/script&gt;

&lt;p&gt;where models $m_1$ and $m_2$ are both subjected to the same set of exogenous contingencies $C=${$c_1,c_2,…$}. It measures the average agreement in the set of dependent events that result from each contingency in each model.&lt;/p&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-05-COSMIC/PAM.png&quot; width=&quot;600&quot; /&gt;   &lt;figcaption&gt;
Figure . Statical Results for the Comparison between COSMIC &amp;amp; DC Simulator [1]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;5-conclusion&quot;&gt;5. CONCLUSION&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;COSMIC represents a power system as a set of hybrid discrete/continuous differential algebraic equations, simultaneously simulating protection systems and machine dynamics.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;By simulating 1200 randomly chosen N−2 contingencies for a 2383-bus test case, we found that COSMIC produces heavy-tailed blackout size distributions, which are typically found in both historical blackout data and cascading failure models [].&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;WHY???&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The relative frequency of very large events may be exaggerated in dynamic model due to numerical non-convergence (about 3% of cases).&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;WHY???&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The blackout size results show that load models can substantially impact cascade sizes—cases that used constant impedance loads showed consistently smaller blackouts, relative to constant current, power or exponential models.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The contingency simulation results from COSMIC were compared to corresponding simulations from a dc power flow based quasi-steady-state cascading failure simulator, using a new metric. The two models largely agreed for the initial periods of cascading (for about 10 events), then diverged for later stages where dynamic phenomena drive the sequence of events.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Together these results illustrate that detailed dynamic models of cascading failure can be useful in understanding the relative importance of various features of these models.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The particular model used in this paper, COSMIC, is likely &lt;strong&gt;too slow&lt;/strong&gt; for many large-scale statistical analyses, but comparing detailed models to simpler ones can be helpful in understanding the relative importance of various modeling assumptions that are necessary to understand complicated phenomena such as cascading.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;6-my-reseasrch-project&quot;&gt;6. MY RESEASRCH PROJECT&lt;/h1&gt;

&lt;h2 id=&quot;purpose-5&quot;&gt;Purpose&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Forcast or detect cascading outages in power systems.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;approach&quot;&gt;Approach&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Use a GNN based model to predict cascading outages.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;experiments&quot;&gt;Experiments&lt;/h2&gt;

&lt;h3 id=&quot;step-1-data-generation&quot;&gt;Step 1. Data Generation&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Need to introduce randomness to create large size of dataset.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-2-model-gnn-model-structure&quot;&gt;Step 2. Model GNN Model Structure&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Does the model sturcture is proper for the goal?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the strength of the model? and why?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-3-train-the-model--tune-the-hyper-parameters&quot;&gt;Step 3. Train the Model &amp;amp; Tune the Hyper-parameters&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;🤔&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;7-appendix&quot;&gt;7. APPENDIX&lt;/h1&gt;

&lt;h2 id=&quot;a-differential-equations-in-dynamic-power-system&quot;&gt;A. Differential equations in dynamic power system&lt;/h2&gt;

&lt;h3 id=&quot;equation-for-rotor-speed&quot;&gt;Equation for rotor speed&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;M \frac{dw_i}{dt} = P_{m,i} - P_{g,i} - D(w_i-1)&lt;/script&gt;

&lt;p&gt;where&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;$w_i$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;$P_{m,i}$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;$P_{g,i}$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;$D$&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;equation-for-rotor-angle&quot;&gt;Equation for rotor angle&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{d\delta_i(t)}{dt} = 2 \pi f_0 (w_i-1)&lt;/script&gt;

&lt;p&gt;where&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;$delta_i(t)$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;$f_0$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;$w_i$&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;etc.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;references&quot;&gt;REFERENCES&lt;/h1&gt;
&lt;p&gt;[1] J. Song, E. Cotilla-Sanchez, G. Ghanavati and P. D. H. Hines, “Dynamic Modeling of Cascading Failure in Power Systems,” in IEEE Transactions on Power Systems, vol. 31, no. 3, pp. 2085-2095, May 2016.&lt;/p&gt;

&lt;p&gt;[2]&lt;/p&gt;
</description>
        <pubDate>Tue, 05 Jan 2021 00:00:00 -0600</pubDate>
      </item>
    
      <item>
        <title>LMI and Power Systems</title>
        <link>/research/energy/2021/01/04/LMI-and-Power-Sys.html</link>
        <guid isPermaLink="true">/research/energy/2021/01/04/LMI-and-Power-Sys.html</guid>
        <description>
</description>
        <pubDate>Mon, 04 Jan 2021 00:00:00 -0600</pubDate>
      </item>
    
      <item>
        <title>Gram–Schmidt Process</title>
        <link>/research/mathematics/2021/01/03/GS.html</link>
        <guid isPermaLink="true">/research/mathematics/2021/01/03/GS.html</guid>
        <description>&lt;p&gt;This article was written by referring to the &lt;em&gt;Fall 2020 Numerical Analysis: Linear Algebra Course&lt;/em&gt; and the following links.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.utexas.edu/users/flame/laff/alaff/chapter03-gram-schmidt.html&quot;&gt;ALAFF: Gram-Schmidt Orthogonalization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ULAFF/ALAFF&quot;&gt;ALAFF Git Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;!-- ###################################################################### --&gt;

&lt;h1 id=&quot;gramschmidt-process&quot;&gt;Gram–Schmidt Process&lt;/h1&gt;

&lt;p&gt;Given a set of linearly independent vectors $Span({ a_0, … , a_{n-1} } ) \subset \mathbb{C}^m$, the Gram-Schimdt process computes a new basis {$q_0, … , q_{n-1}$} that &lt;strong&gt;spans the same subspace&lt;/strong&gt; as the original vectors, i.e. $Span({ a_0, … , a_{n-1} } ) = Span({ q_0, … , q_{n-1} } )$ [1].&lt;/p&gt;

&lt;p&gt;It should be noted that we would like to have the new basis, ${ q_0, … , q_{n-1} }$, having the following characteristics.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All vectors are &lt;strong&gt;unit vectors&lt;/strong&gt; of length 1, i.e. $|q_i| = 1$.&lt;/li&gt;
  &lt;li&gt;All vectors are &lt;strong&gt;mutually perpendicular&lt;/strong&gt;, i.e. $q_i \perp q_j$ where $i \neq j$.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These characteristics can be obtained through the following routine which is composed by three steps [1]:&lt;/p&gt;

&lt;blockquote&gt;

  &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Gram-Schmidt Process&amp;gt;
  Step 1. Compute the direction of the vectors.
  Step 2. Compute the magnitude of the normalizer.
  Step 3. Compute a unit vector.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Compute the vector $q_0$ ($i=0$)
    &lt;ul&gt;
      &lt;li&gt;Step 1. Compute the direction of the vectors.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;N.A. \ (q_0 \parallel a_0)&lt;/script&gt;

    &lt;ul&gt;
      &lt;li&gt;Stpe 2. Compute the magnitude of the normalizer.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;\rho_{0, 0}=\|a_0\|_2&lt;/script&gt;

    &lt;ul&gt;
      &lt;li&gt;Step 3. Compute a unit vector.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;q_0=a_0/\rho_{0, 0}&lt;/script&gt;

    &lt;ul&gt;
      &lt;li&gt;Result&lt;/li&gt;
    &lt;/ul&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;a_0=q_0\rho_{0, 0}&lt;/script&gt;
  &lt;/li&gt;
  &lt;li&gt;Compute the vector $q_1$ ($i=1$)
    &lt;ul&gt;
      &lt;li&gt;Step 1. Compute the direction of the vectors.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;\rho_{0, 1}=q_0^{H}a_1&lt;/script&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;a_{1}^{\perp}=a_1-\rho_{0, 1}q_0&lt;/script&gt;

    &lt;ul&gt;
      &lt;li&gt;Step 2. Compute the magnitude of the normalizer.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;\rho_{1, 1}=\|a_1^\perp\|_2&lt;/script&gt;

    &lt;ul&gt;
      &lt;li&gt;Step 3. Compute a unit vector.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;q_1=a_1^\perp/\rho_{1, 1}&lt;/script&gt;

    &lt;ul&gt;
      &lt;li&gt;Result&lt;/li&gt;
    &lt;/ul&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\left[\begin{array}{c|c}a_{0} &amp; a_{1}\end{array}
      \right]=
      \left[\begin{array}{c|c}q_{0} &amp; q_{1}\end{array}
      \right]
      \left[\begin{array}{c|c}
      \rho_{0, 0} &amp; \rho_{0, 1} \\
      \hline
      0 &amp; \rho_{1, 1}
      \end{array}
      \right] %]]&gt;&lt;/script&gt;
  &lt;/li&gt;
  &lt;li&gt;Compute the vector $q_2$ ($i=2$)
    &lt;ul&gt;
      &lt;li&gt;Step 1. Compute the direction of the vectors.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{bmatrix}\rho_{0, 2} \\ \rho_{1, 2}\end{bmatrix}=\begin{bmatrix}q_{0} &amp; q_{1}\end{bmatrix}^Ha_2 %]]&gt;&lt;/script&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
a_{2}^{\perp}=a_2-\begin{bmatrix}q_{0} &amp; q_{1}\end{bmatrix}\begin{bmatrix}\rho_{0, 2} \\ \rho_{1, 2}\end{bmatrix} %]]&gt;&lt;/script&gt;

    &lt;ul&gt;
      &lt;li&gt;Step 2. Compute the magnitude of the normalizer.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;\rho_{2, 2}=\|a_2^\perp\|_2&lt;/script&gt;

    &lt;ul&gt;
      &lt;li&gt;Step 3. Compute a unit vector.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;q_2=a_2^\perp/\rho_{2, 2}&lt;/script&gt;

    &lt;ul&gt;
      &lt;li&gt;Result&lt;/li&gt;
    &lt;/ul&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\left[\begin{array}{c|c}a_{0} \ a_{1}&amp; a_{2}\end{array}
      \right]=
      \left[\begin{array}{c|c}q_{0} \ q_{1} &amp; q_{2}\end{array}
      \right]
      \left[\begin{array}{cc|c}
      \rho_{0, 0}  &amp; \rho_{0, 1} &amp; \rho_{0, 2} \\
      0 &amp; \rho_{1, 1} &amp; \rho_{1, 2}\\
      \hline
      0 &amp; 0 &amp; \rho_{2, 2}
      \end{array}
      \right] %]]&gt;&lt;/script&gt;
  &lt;/li&gt;
  &lt;li&gt;keep do the routine till $i=n-1$
    &lt;ul&gt;
      &lt;li&gt;Step 1. Compute the direction of the vectors.&lt;/li&gt;
      &lt;li&gt;Step 2. Compute the magnitude of the normalizer.&lt;/li&gt;
      &lt;li&gt;Step 3. Compute a unit vector.&lt;/li&gt;
      &lt;li&gt;Final Result&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;A = QR&lt;/script&gt;

&lt;p&gt;What we should pay attention to in the final result ($A = QR$) are …&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;All column vectors of $Q$, the new basis {$q_0, … , q_{n-1}$}, are unit vector and mutually orthogonal, which means $Q$ is an &lt;strong&gt;unitary matrix&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The matrix $R$ is &lt;strong&gt;upper triangular matrix&lt;/strong&gt; and $rank(R)=m$.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The dot product of $Q$ and $R$, which is equal to $A$, can be regarded as a &lt;strong&gt;linear combination&lt;/strong&gt; of $Q$’s column vectors.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The result of &lt;strong&gt;Gram-Shmidt Process&lt;/strong&gt; can be regarded as a result of &lt;strong&gt;QR factorization&lt;/strong&gt; (decomposotion).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;!-- ###################################################################### --&gt;

&lt;h1 id=&quot;classical-gram-schmidt-cgs&quot;&gt;Classical Gram-Schmidt (CGS)&lt;/h1&gt;

&lt;p&gt;The content discussed in the previous section can be summarized into an algorithm as follows, which is the CGS-QR algorithm [2].&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Consider $A=QR$.&lt;/p&gt;

&lt;p&gt;Partition the given matrices as follows.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\left[\begin{array}{c|cc}A_{0} &amp; a_{1} &amp; A_{2}\end{array}
        \right]=
        \left[\begin{array}{c|cc}Q_{0} &amp; q_{1} &amp; Q_{2}\end{array}
        \right]
        \left[\begin{array}{c|cc}
        R_{0, 0}  &amp; r_{0, 1} &amp; R_{0, 2} \\
        \hline
        0 &amp; \rho_{1, 1} &amp; r_{1, 2}^T\\
        0 &amp; 0 &amp; R_{2, 2}
        \end{array}
        \right] %]]&gt;&lt;/script&gt;

&lt;p&gt;Assume that $Q_0$ and $R_{0,0}$ have already been computed.&lt;/p&gt;

&lt;p&gt;Since $Q$ is unitary matric ($Q_0^HQ_0=I$ and $Q_0^Hq_1=0$),&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$Q_0^Ha_1=Q_0^HQ_0r_{0,1}+q_1\rho_{1,1}=r_{01}$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Compute $r_{0,1}$, which is already known.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$r_{0,1}:=Q_0^Ha_1$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Compute $a_1^\perp$ and $\rho_{1,1}$ (Step 1. &amp;amp; 2.).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$a_1^\perp:=a_1-Q_0r_{0,1}$&lt;/li&gt;
  &lt;li&gt;$\rho_{1,1}:=|a_1^\perp|$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Compute $q_1$ (Step 3.).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$q_1 := a_1^\perp / \rho_{1,1}$&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Figure 1. shows Classical Gram-Schmidt algorithm for computing the QR factorization of a matrix A. The algorithm used &lt;a href=&quot;https://github.com/jhyun0919/ALAFF-in-python/blob/main/Assignments/flame_tests.ipynb&quot;&gt;FLAME notation&lt;/a&gt;.&lt;br /&gt;
Code 1. shows the algorithms in python language.&lt;/p&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-12-26-GS/CGS.png&quot; width=&quot;70%&quot; /&gt;   &lt;figcaption&gt;
Figure 1. Classical Gram-Schmidt algorithm for computing the QR factorization of a matrix A [2]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/79fefe26187d174e154474e64516a8f1.js&quot;&gt;&lt;/script&gt;
 &lt;em&gt;Code. 1: CGS QR in python&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jhyun0919/ALAFF-in-python/blob/main/Assignments/week03/test_CGS_QR.ipynb&quot;&gt;Test_CGS_QR.ipynb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;!-- ###################################################################### --&gt;

&lt;h1 id=&quot;modified-gram-schmidt-mgs&quot;&gt;Modified Gram-Schmidt (MGS)&lt;/h1&gt;

&lt;p&gt;Gram-Schmidt process can be performed differently from CGS, and the corresponding algorithm is as follows, which is called Modified Gram-Schmidt (MGS) [3].&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Consider $A=QR$.&lt;/p&gt;

&lt;p&gt;Partition the given matrices as follows.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\left[\begin{array}{c|cc}A_{0} &amp; a_{1} &amp; A_{2}\end{array}
        \right]=
        \left[\begin{array}{c|cc}Q_{0} &amp; q_{1} &amp; Q_{2}\end{array}
        \right]
        \left[\begin{array}{c|cc}
        R_{0, 0}  &amp; r_{0, 1} &amp; R_{0, 2} \\
        \hline
        0 &amp; \rho_{1, 1} &amp; r_{1, 2}^T\\
        0 &amp; 0 &amp; R_{2, 2}
        \end{array}
        \right] %]]&gt;&lt;/script&gt;

&lt;p&gt;Assume that $a_1$ and $A_2$ are known.&lt;/p&gt;

&lt;p&gt;Compute $\rho_{1,1}$ (compute the magnitude ↔︎ Step 2.).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$\rho_{1,1}:=|a_1|$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Compute $q_1$ (compute the unit vector ↔︎ Step 3.).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$q_1:=a_1/\rho_{1,1}$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Compute $r_{0,1}^T$, which is already known.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$r_{0,1}^T:=q_1^H(A_2 - Q_2R_{22}) = q_1^HA_2$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Compute $A_2$ (update $A_2$ for the orthogonality ↔︎ Step 1.).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$A_2:=A_2-q_1r_{0,1}^T$&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Figure 2. shows Modified Gram-Schmidt algorithm for computing the QR factorization of a matrix A. The algorithm used &lt;a href=&quot;https://github.com/jhyun0919/ALAFF-in-python/blob/main/Assignments/flame_tests.ipynb&quot;&gt;FLAME notation&lt;/a&gt;.&lt;br /&gt;
Code 2. shows the algorithms in python language.&lt;/p&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-12-26-GS/MGS-side-by-side.png&quot; width=&quot;100%&quot; /&gt;   &lt;figcaption&gt;
Figure 2. Alternative Modified Gram-Schmidt algorithm for computing the QR factorization of a matrix A [3]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/c1395732ab7336b7a27b719af66213ab.js&quot;&gt;&lt;/script&gt;
 &lt;em&gt;Code. 2: MGS QR in python&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jhyun0919/ALAFF-in-python/blob/main/Assignments/week03/test_MGS_QR.ipynb&quot;&gt;Test_MGS_QR.ipynb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;!-- ###################################################################### --&gt;

&lt;h1 id=&quot;why-do-we-need-this&quot;&gt;Why do we need this?&lt;/h1&gt;

&lt;p&gt;Through Gram-Schmidt process, we can obtain an &lt;strong&gt;orthonormal basis&lt;/strong&gt; of the matrix $A$’s subspace, which has a set of lineary independent vectors {$a_0, …, a_{n-1}$}.&lt;/p&gt;

&lt;p&gt;The advantages of being able to have an orthonormal basis are following [4].&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We can express any  $v \in \mathbb{C}^n$ as a &lt;strong&gt;linear combination of coefficients&lt;/strong&gt;, which will allows us to have an &lt;strong&gt;explicit formula&lt;/strong&gt; expressing $v$ with the orthonormal basis.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The explicit formula is very useful when dealing with &lt;strong&gt;projection onto subspace&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;p&gt;[1] M. M. Robert van de Geijn, “Advanced Linear Algebra: Foundations to Frontiers,” ALAFF Classical Gram-Schmidt (CGS). [Online]. Available: https://www.cs.utexas.edu/users/flame/laff/alaff/chapter03-classical-gram-schmidt.html. [Accessed: 03-Jan-2021].&lt;/p&gt;

&lt;p&gt;[2] M. M. Robert van de Geijn, “Advanced Linear Algebra: Foundations to Frontiers,” ALAFF Classical Gram-Schmidt algorithm. [Online]. Available: https://www.cs.utexas.edu/users/flame/laff/alaff/chapter03-cgs-algorithm.html. [Accessed: 03-Jan-2021].&lt;/p&gt;

&lt;p&gt;[3] M. M. Robert van de Geijn, “Advanced Linear Algebra: Foundations to Frontiers,” ALAFF Modified Gram-Schmidt (MGS). [Online]. Available: https://www.cs.utexas.edu/users/flame/laff/alaff/Modified-Classical-Gram-Schmidt.html. [Accessed: 03-Jan-2021].&lt;/p&gt;

&lt;p&gt;[4] Michael Albanese, “Why is orthogonal basis important?,” Mathematics Stack Exchange. [Online]. Available: https://math.stackexchange.com/questions/518600/why-is-orthogonal-basis-important. [Accessed: 03-Jan-2021].&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Jan 2021 00:00:00 -0600</pubDate>
      </item>
    
      <item>
        <title>(Python-Dev Tips) Virtual Environment</title>
        <link>/research/cs/2021/01/01/virtualenv.html</link>
        <guid isPermaLink="true">/research/cs/2021/01/01/virtualenv.html</guid>
        <description>&lt;p&gt;In this article, we are going to explain what is virtual environment in python and why do we need it. Also, we will show you how to set up a virtual environment and introduce basic commands.&lt;/p&gt;

&lt;p&gt;This posting is one of a series of tips for developing python following the previous post.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://jhyun0919.github.io/research/cs/2020/10/01/git-tips.html&quot;&gt;Git Basic&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Virtual Environment&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jhyun0919.github.io/research/cs/2020/10/03/pep8.html&quot;&gt;PEP8&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jhyun0919.github.io/research/cs/2020/10/04/jupyter.html&quot;&gt;Jupyter&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This post was written with reference to the following materials.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/tutorial/venv.html&quot;&gt;Python Docs: Virtual Environments&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://realpython.com/python-virtual-environments-a-primer/&quot;&gt;Real Python: Python Virtual Environments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;what-is-virtual-env--why-do-we-need-it&quot;&gt;What is Virtual-Env &amp;amp; Why Do We Need it?&lt;/h1&gt;

&lt;p&gt;Python &lt;strong&gt;virtual environment&lt;/strong&gt; is an isolated environment for a Python project. This allows each project can have its &lt;strong&gt;own dependencies&lt;/strong&gt;, regardless of what dependencies every other project has [1].&lt;/p&gt;

&lt;p&gt;This provides the advantage of being able to build each development environment for multiple projects on one local PC. For an example, Figure 1. shows how one can manage virtual environments for serveral projects. More specifically, it shows how to manage each python projection for a web app that uses a different version of the Django package.&lt;/p&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-04-virtualenv/virtualenv_concept.png&quot; width=&quot;555&quot; /&gt;   &lt;figcaption&gt;
Figure 1. Examples of Python Virtual Environment [2].
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;basic-virtual-env-usages&quot;&gt;Basic Virtual-Env Usages&lt;/h1&gt;

&lt;p&gt;There are two ways to set up and manage virtual envoronment, &lt;strong&gt;pip&lt;/strong&gt; and &lt;strong&gt;anaconda&lt;/strong&gt;. In this article, we will explain how to set up and manage virtual envoronment using anaconda.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.anaconda.com&quot;&gt;&lt;strong&gt;Anaconda&lt;/strong&gt;&lt;/a&gt; is a package manager, an environment manager, a Python/R data science distribution, and a collection of over 7,500+ open-source packages [3]. Through this, we can set up and manage a virtual emvironment for each projects.&lt;/p&gt;

&lt;p&gt;We will introduce basic anaconda usages. For more details, you can refer to the following Documentation or Cheat-Sheet.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.anaconda.com/anaconda/&quot;&gt;Anaconda Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://conda.io/projects/conda/en/latest/user-guide/cheatsheet.html&quot;&gt;Conda Cheat-Sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;We can create a new virtual environment with the following commands and manage packages in the corresponding virtual environment for each project.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Create a new virtual environmnet&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;conda create &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; ENVNAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Activate a named environment&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;conda activate ENVNAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install a package&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;conda &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;PKGNAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Deactivate current environment&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;conda deactivate ENVNAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;And, we can clearly provide the dependency for the project to other developers through the following commands.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Exporting the &lt;em&gt;envname.yml&lt;/em&gt;&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;conda &lt;span class=&quot;nb&quot;&gt;env export&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; ENVNAME &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; envname.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Finally, we can create a virtual environment that matches the developer’s development environment on our local PC through the &lt;em&gt;envname.yml&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Creating an environment from an &lt;em&gt;envname.yml&lt;/em&gt;&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;conda &lt;span class=&quot;nb&quot;&gt;env &lt;/span&gt;create &lt;span class=&quot;nt&quot;&gt;--file&lt;/span&gt; envname.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- &lt;figure align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-04-virtualenv/anaconda_gui.png&quot; width=&quot;900&quot; /&gt;
  &lt;figcaption&gt;Figure 2. Example of Anaconda GUI.&lt;/figcaption&gt;
&lt;/figure&gt; --&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;[1] Real Python, “Python Virtual Environments: A Primer,” Real Python, 17-Jul-2020. [Online]. Available: https://realpython.com/python-virtual-environments-a-primer/. [Accessed: 05-Jan-2021].&lt;/p&gt;

&lt;p&gt;[2] S. Shakya, “Virtual Environment in Python,” Medium, 02-May-2019. [Online]. Available: https://medium.com/incwell-bootcamp/virtual-environment-in-python-54db665b9939. [Accessed: 05-Jan-2021].&lt;/p&gt;

&lt;p&gt;[3] “Anaconda Individual Edition¶,” Anaconda Individual Edition - Anaconda documentation. [Online]. Available: https://docs.anaconda.com/anaconda/. [Accessed: 05-Jan-2021].&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Jan 2021 00:00:00 -0600</pubDate>
      </item>
    
      <item>
        <title>(TIL) How to Speak</title>
        <link>/daily/essay/2020/12/28/how-to-speak.html</link>
        <guid isPermaLink="true">/daily/essay/2020/12/28/how-to-speak.html</guid>
        <description>&lt;p&gt;&lt;a href=&quot;http://sixminutes.dlugan.com/speaking-tips-patrick-henry-winston-speak/&quot;&gt;How to Speak: 7 Speaking Tips from Patrick Henry Winston&lt;/a&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=Unzc731iCUY&quot;&gt;How To Speak by Patrick Winston&lt;/a&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=uylHeDdlMrc&amp;amp;amp%3Bab_channel=sergiusheartless&quot;&gt;How to Speak - The Big Four&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 28 Dec 2020 00:00:00 -0600</pubDate>
      </item>
    
      <item>
        <title>Householder QR Factorization</title>
        <link>/research/mathematics/2020/12/26/Householder.html</link>
        <guid isPermaLink="true">/research/mathematics/2020/12/26/Householder.html</guid>
        <description>&lt;p&gt;This article was written by referring to the &lt;em&gt;Fall 2020 Numerical Analysis: Linear Algebra Course&lt;/em&gt; and the following links.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.utexas.edu/users/flame/laff/alaff/chapter03-gram-schmidt.html&quot;&gt;ALAFF: Gram-Schmidt Orthogonalization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ULAFF/ALAFF&quot;&gt;ALAFF Git Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;unitary-matrix&quot;&gt;Unitary Matrix&lt;/h1&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-04-Householder/reflector.png&quot; width=&quot;70%&quot; /&gt;   &lt;figcaption&gt;
Figure 1.
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;!-- ###################################################################### --&gt;

&lt;h1 id=&quot;householder-transformation&quot;&gt;Householder transformation&lt;/h1&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-04-Householder/Housev.png&quot; width=&quot;70%&quot; /&gt;   &lt;figcaption&gt;
Figure 2.
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/d8e7ad29b9e0de1bc78e7b4b70bd9b2f.js&quot;&gt;&lt;/script&gt;
 &lt;em&gt;Code 1. Householder transformation in python.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;!-- ###################################################################### --&gt;

&lt;h1 id=&quot;householder-qr-factorization-algorithm&quot;&gt;Householder QR factorization algorithm&lt;/h1&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-04-Householder/HQR_how.png&quot; width=&quot;70%&quot; /&gt;   &lt;figcaption&gt;
Figure 3.
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-04-Householder/HQR.png&quot; width=&quot;70%&quot; /&gt;   &lt;figcaption&gt;
Figure 4.
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/c65f24fb8416e3f50c8319d9da21f812.js&quot;&gt;&lt;/script&gt;
 &lt;em&gt;Code 2. Householder QR factorization in python.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/867a0d120db1ebe0e4ec0a19201f511a.js&quot;&gt;&lt;/script&gt;
 &lt;em&gt;Code 3. Householder LQ factorization in python.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;!-- ###################################################################### --&gt;

&lt;h1 id=&quot;forming-q&quot;&gt;Forming Q&lt;/h1&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-04-Householder/FormQ_how.png&quot; width=&quot;70%&quot; /&gt;   &lt;figcaption&gt;
Figure 5.
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-04-Householder/FormQ.png&quot; width=&quot;70%&quot; /&gt;   &lt;figcaption&gt;
Figure 6.
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/9e626b4fa8f7066550540ab721b1114e.js&quot;&gt;&lt;/script&gt;
 &lt;em&gt;Code 4. Form Q from Householder QR factorization in python.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;!-- ###################################################################### --&gt;

&lt;h1 id=&quot;applying-qh&quot;&gt;Applying QH&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;!-- ###################################################################### --&gt;

&lt;h1 id=&quot;orthogonality-of-resulting-q&quot;&gt;Orthogonality of resulting Q&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jhyun0919/ALAFF-in-python/blob/main/Assignments/week03/test_orthogonality.ipynb&quot;&gt;test_orthogonality.ipynb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- ###################################################################### --&gt;
&lt;h1 id=&quot;blocked-householder-qr-factorization&quot;&gt;Blocked Householder QR factorization&lt;/h1&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2021-01-04-Householder/HQR_blk.png&quot; width=&quot;70%&quot; /&gt;   &lt;figcaption&gt;
Figure 7.
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2&gt;&lt;br /&gt;&lt;/h2&gt;
&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;p&gt;[1]&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Dec 2020 00:00:00 -0600</pubDate>
      </item>
    
      <item>
        <title>(Tutorial) EMTP - Line/Cable Modeling for EMT Simulations</title>
        <link>/research/energy/2020/12/14/EMTP-Line-Cable-Modeling.html</link>
        <guid isPermaLink="true">/research/energy/2020/12/14/EMTP-Line-Cable-Modeling.html</guid>
        <description>&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLP4K-zG4OPTEWlzPJQvKxnDd1I0ObW4MS&quot;&gt;EMTP Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 14 Dec 2020 00:00:00 -0600</pubDate>
      </item>
    
      <item>
        <title>(TIL) Reviewing Statictics and Probability</title>
        <link>/research/mathematics/2020/12/13/prob.html</link>
        <guid isPermaLink="true">/research/mathematics/2020/12/13/prob.html</guid>
        <description>
</description>
        <pubDate>Sun, 13 Dec 2020 00:00:00 -0600</pubDate>
      </item>
    
      <item>
        <title>Laïcité</title>
        <link>/daily/essay/2020/12/12/essay.html</link>
        <guid isPermaLink="true">/daily/essay/2020/12/12/essay.html</guid>
        <description>&lt;p&gt;Recently, I have finished two final exams, and one left next Thursday. I think it is a good moment to start again to write what I have been thinking these days. Looking back at the end of the semester, I realized that a lot had happened globally, which I have not thought deeply about due to my hectic school life. For instance, the pandemic broke out, and we are living in the era of New Normal. Also, there was a presidential election in the US. In my thought, these are the most notable or significant events of this year. However, in this article, I would like to share my view about what happened in France.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://bdidier.fr/wp-content/uploads/1250_portail_laic.jpg&quot; width=&quot;90%&quot; /&gt;   &lt;figcaption align=&quot;center&quot;&gt;
(https://bdidier.fr/4eme-la-laicite/)
  &lt;/figcaption&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In October, a French middle school teacher was attacked and beheaded by a terrorist. Similar incidents have been happening after this incident, and it reminded me of the terror in Paris four years ago. Behind these tragedies, we all know there are complex religious problems. Several factors may be responsible for the continued occurrence of these incidents in France. In my respect, it has a lot to do with Laicite (Secularism).&lt;/p&gt;

&lt;p&gt;I know that it is nearly impossible for me, not French, to fully understand and describe the meaning of Laicite. To the best of my understanding, it means strict separation of religion from society, the secular world. There must be pros and cons of separating religion from our lives. I can agree that we can get an opportunity to consider religion on an equal footing with other values by taking it apart from society. For example, in Korea, many parents agree that their children can make decisions for their future by themselves. However, suddenly they change extremely conservative when it comes to religious choices, which is nonsense, given that it is just another decision like others. I think they act differently because they never take apart religion from their lives and always give a top priority to it. Suppose parents had tried to separate religion from society and consider it on an equal footing. In that case, they might have different conversations with their children and ended up with more rational conclusions.&lt;/p&gt;

&lt;p&gt;However, a series of these thoughts can be taken as a challenge or blasphemy for violent and radical religious groups. In my opinion, these groups are very likely to use violence in the form of retaliation when society becomes unstable. As a result, ironically, the society where rational judgment can be made is exposed to the risk of terror. As far as religion is concerned, I think France has a society with good conditions for making rational judgments. Simultaneously, the country is exposed to violence in an unstable period due to the pandemic. I hope they will overcome this crisis well without further tragedy, and others will be able to learn the unique way of their thinking.&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Dec 2020 00:00:00 -0600</pubDate>
      </item>
    
      <item>
        <title>(Python-Dev Tips) Git Basic</title>
        <link>/research/cs/2020/10/01/git-tips.html</link>
        <guid isPermaLink="true">/research/cs/2020/10/01/git-tips.html</guid>
        <description>&lt;p&gt;Starting with this posting, we will upload a series of articles that can help with Python development. The series will be written in four articles, and the contents are as follows, and if necessary, additional posts will be uploaded as a separate series.&lt;/p&gt;

&lt;p&gt;In this article, we will show you what Git is and Why do we need it. Also, we will give a brief intro to how we can start and use Git.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Git Basic&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jhyun0919.github.io/research/cs/2021/01/01/virtualenv.html&quot;&gt;Virtual Environment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jhyun0919.github.io/research/cs/2020/10/03/pep8.html&quot;&gt;PEP8&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jhyun0919.github.io/research/cs/2020/10/04/jupyter.html&quot;&gt;Jupyter&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;what-is-git&quot;&gt;What is Git&lt;/h1&gt;

&lt;p&gt;Git is a free and open-source distributed &lt;strong&gt;version control&lt;/strong&gt; system designed to handle everything from small to very large projects with speed and efficiency [1]. It provides us a history of content changes and facilitates collaborative changes to files [2].&lt;/p&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-10-01-git/git.jpeg&quot; width=&quot;80%&quot; /&gt;   &lt;figcaption&gt;
Figure 1. Examples of Using Git [3].
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;why-do-we-need-git&quot;&gt;Why Do We Need Git&lt;/h1&gt;
&lt;p&gt;When we work on a project and do something creative and productive, we repeat the following four steps [2].&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create things.&lt;/li&gt;
  &lt;li&gt;Save things.&lt;/li&gt;
  &lt;li&gt;Edit things.&lt;/li&gt;
  &lt;li&gt;Save the things again.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By repeating the above steps, we add new things, delete unnecessary ones, request modifications, and make corrections where necessary. To make this process straightforward and efficient, we turn to the help of &lt;strong&gt;version control&lt;/strong&gt;. Through the version control system, we can easily track the followings [2].&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When we did it.&lt;/li&gt;
  &lt;li&gt;Why we did it.&lt;/li&gt;
  &lt;li&gt;What the contents of the change.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This makes it possible to efficiently understand the project’s process and be more productive when revisiting the project in the future.&lt;/p&gt;

&lt;p&gt;For these reasons, we cannot overemphasize the necessity of version control when working on projects through collaboration as well as personal projects. By using &lt;strong&gt;Git&lt;/strong&gt;, we can take these benefits of version control.&lt;/p&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-10-01-git/gitflow.png&quot; width=&quot;80%&quot; /&gt;   &lt;figcaption&gt;
Figure 2. Workflow with Git [4].
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;basic-git-commands&quot;&gt;Basic Git Commands&lt;/h1&gt;

&lt;p&gt;The following are essential terminal commands for Git. It may be difficult to memorize, but it is good to understand only its purpose. As long as you understand each command’s purpose, you can easily use Git through a GUI, which will be covered in the following section.&lt;/p&gt;

&lt;p&gt;For reference, the contents are referred to as the following links.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.to/dhruv/essential-git-commands-every-developer-should-know-2fl&quot;&gt;Essential git commands every developer should know&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dzone.com/articles/top-20-git-commands-with-examples&quot;&gt;Top 20 Git Commands With Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-init&quot;&gt;git init&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;project-name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command is used to start a new repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-clone&quot;&gt;git clone&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;url]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command is used to obtain a repository from an existing URL.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-add&quot;&gt;git add&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;file-name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command adds a file to the staging area.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-rm&quot;&gt;git rm&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;file-name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command deletes the file from your working directory and stages the deletion.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-commit&quot;&gt;git commit&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; “Message to go with the commit here”
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command records or snapshots the file permanently in the version history.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-status&quot;&gt;git status&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command lists all the files that have to be committed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-push&quot;&gt;git push&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;variable name] master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command sends the committed changes of master branch to your remote repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;variable name] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch-name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command sends the branch commits to your remote repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-branch&quot;&gt;git branch&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command lists all the local branches in the current repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch-name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command creates a new branch.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch-name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command deletes the feature branch.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-checkout&quot;&gt;git checkout&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch-name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command is used to switch from one branch to another.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch-name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command creates a new branch and also switches to it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-pull&quot;&gt;git pull&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git pull &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;repository &lt;span class=&quot;nb&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command fetches and merges changes on the remote server to your working directory.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-merge&quot;&gt;git merge&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git merge &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch-name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command merges the specified branch’s history into the current branch.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-diff&quot;&gt;git diff&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command shows the file differences which are not yet staged.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;first branch-name] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;second branch-name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command shows the differences between the two branches mentioned.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-stash&quot;&gt;git stash&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git stash save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command temporarily stores all the modified tracked files.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git stash pop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command restores the most recently stashed files.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git stash list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command lists all stashed changesets.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git stash drop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;This command discards the most recently stashed changeset.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;gitkraken&quot;&gt;GitKraken&lt;/h1&gt;

&lt;p&gt;There is an entry barrier to use the commands described above in a terminal window. For those who have difficulty using Git in a terminal window, we suggest to use a &lt;strong&gt;GUI&lt;/strong&gt; called &lt;strong&gt;GitKraken&lt;/strong&gt;. With GitKraken, you can intuitively and easily manage projects without memorizing all the git commands. Figure 3. is a screenshot of GitKraken.&lt;/p&gt;

&lt;p&gt;We can do the basic operation as the git commands described above through the buttons in Area 1.
In Area 2, GitKraken shows the files that have been modified compared to the log, whether these files are added in the staging area, and allows us to commit.
Lastly, in Area 3, it shows us the workflow of the project.&lt;/p&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-10-01-git/gitkraken eg.png&quot; width=&quot;100%&quot; /&gt;   &lt;figcaption&gt;
Figure 3. GitKraken Screenshot.
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;one-more-thing-&quot;&gt;One More Thing 😜&lt;/h1&gt;

&lt;p&gt;Those who want to use Git only with commands in a terminal window, not using a GUI, or who want to have a deeper understanding, can learn without losing interest through the quest-game-type tutorial provided at the following link.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://learngitbranching.js.org/?locale=en&quot;&gt;Git Tutorial Quest Game&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-10-01-git/git tutorial.gif&quot; width=&quot;90%&quot; /&gt;   &lt;figcaption&gt;
Figure 4. Git Command Line Tutorial Screenshot.
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;[1] Git. [Online]. Available: https://git-scm.com/. [Accessed: 01-Oct-2020].&lt;/p&gt;

&lt;p&gt;[2] “Git Basics Episode 1,” Git. [Online]. Available: https://git-scm.com/video/what-is-version-control. [Accessed: 01-Oct-2020].&lt;/p&gt;

&lt;p&gt;[3] S. C. Atuonwu, “5 Git Commands You Should Know, with Code Examples,” freeCodeCamp.org, 10-Jun-2020. [Online]. Available: https://www.freecodecamp.org/news/5-git-commands-you-should-know-with-code-examples/. [Accessed: 01-Oct-2020].&lt;/p&gt;

&lt;p&gt;[4] Atlassian, “Gitflow Workflow: Atlassian Git Tutorial,” Atlassian. [Online]. Available: https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow. [Accessed: 01-Oct-2020].&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Oct 2020 00:00:00 -0500</pubDate>
      </item>
    
      <item>
        <title>The shape of someone or something that I love</title>
        <link>/daily/essay/2020/08/18/essay.html</link>
        <guid isPermaLink="true">/daily/essay/2020/08/18/essay.html</guid>
        <description>&lt;p&gt;Whenever I come back to Korea, 떡볶이 has always been the first food that I had. Briefly speaking, this food is just some rice cakes with spicy sauce. Compare to other Korean foods, 떡볶이 might seem shabby. However, this food is one of the reasons why I love and how I remember this place. Why did I pick 떡볶이 instead of other fancy dishes, and why am I so into it? I guess this is because it is my unique way of engraving memories in this country.&lt;/p&gt;

&lt;p&gt;Likewise, most people who have not grown up in this country might come up with great landmarks when they imagine Korea. However, as a born and raised person in Korea, the shape of this country in my heart is not like that. It could be the small marketplace in my old hometown, or it could be the parking lot in front of my apartment building, where I used to ride a bike and roller skates. It is kind of a secret between me and the place that I love.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://media.giphy.com/media/9G0AdBbVrkV3O/giphy.gif&quot; width=&quot;444&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This pattern is identically applied to the people around me. The one who I love (or loved) is not remembered as her bright and shining moments that all the others could have seen. I memorized her in a way that no one could imagine. It does not have to be pretty or lovely. It just needs to be my little secret between her and me. These secrets comfort me and give strength, even though I can no longer be together with her.&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Aug 2020 00:00:00 -0500</pubDate>
      </item>
    
      <item>
        <title>Geometric Meaning of Hessian Matrix</title>
        <link>/research/mathematics/2020/07/21/geometric-meaning-of-hessian.html</link>
        <guid isPermaLink="true">/research/mathematics/2020/07/21/geometric-meaning-of-hessian.html</guid>
        <description>&lt;p&gt;Starting with the definition of the Hessian Matrix, this posting will focus on the geometric meaning of the Hessian matrix. Also, we will discuss the eigenvalues and eigenvectors of the Hessian and introduce the application of it.&lt;/p&gt;

&lt;p&gt;This post was written with reference to the following materials.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://angeloyeo.github.io/2020/06/17/Hessian.html&quot;&gt;Donghoon Yeo’s blog posting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Hessian_matrix&quot;&gt;Wikipedia &amp;gt; Hessian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;hessian-matrix&quot;&gt;Hessian Matrix&lt;/h1&gt;

&lt;h2 id=&quot;definition&quot;&gt;Definition&lt;/h2&gt;
&lt;p&gt;In mathematics, the Hessian matrix or Hessian is a square matrix of second-order partial derivatives of a scalar-valued function, or scalar field. It describes the local curvature of a function of many variables. [1]&lt;/p&gt;

&lt;p&gt;Suppose $f : ℝ^n → ℝ$ is a function taking as input a vector $x ∈ ℝ^n$ and outputting a scalar $f(x) ∈ ℝ$. If all second partial derivatives of $f$ exist and are continuous over the domain of the function, then the Hessian matrix $H$ of $f$ is a square n×n matrix, usually defined and arranged as follows; [1]&lt;/p&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-07-21-geometric meaning of hessian/hessian.png&quot; width=&quot;60%&quot; /&gt;   &lt;figcaption&gt;
Figure 1. Definition of Hessian matrix. [1]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;geometric-meaning&quot;&gt;Geometric Meaning&lt;/h2&gt;

&lt;p&gt;First of all, it is well known that &lt;strong&gt;all matrices can be considered as linear transformations&lt;/strong&gt;. Likewise, we can think of &lt;strong&gt;a Hessian matrix as a linear transformation&lt;/strong&gt;. Geometrically, the main feature of the linear transformation performed by the Hessian matrix is &lt;strong&gt;to make a given function more convex or concave&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let’s look at the Hessian’s geometric meaning in detail through examples.
The Hessian matrices corresponding to Figure 2 and 3 are as follow;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{bmatrix}2 &amp; 1\\1 &amp; 2\\\end{bmatrix} and \begin{bmatrix}2 &amp; 0\\0 &amp; -2\\\end{bmatrix}. %]]&gt;&lt;/script&gt;

&lt;p&gt;The things to note here are, &lt;strong&gt;the eigenvectors of the Hessian matrix represent the principal axis of transformation and the eigenvalues represent the degree of transformation.&lt;/strong&gt; More specifically, if the eigenvalues are all positive (Figure 2), it makes the given function more convex. Conversely, if the eigenvalues are all negative, it makes the given function more concave. However, if some of the eigenvalues are positive, and some are negative (Figure 3), the given function is converted to a saddle shape. To recapitulate, &lt;strong&gt;by using the main feature of the geometric transformation shown by the Hessian, we could emphasize the gradient change of the given function.&lt;/strong&gt;&lt;/p&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-07-21-geometric meaning of hessian/hessian gif 01.gif&quot; width=&quot;90%&quot; /&gt;   &lt;figcaption&gt;
Figure 2. Example of Hessian transform making the given function more convex. [2]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-07-21-geometric meaning of hessian/hessian gif 02.gif&quot; width=&quot;90%&quot; /&gt;   &lt;figcaption&gt;
Figure 3. Example of Hessian transform making the given function to a saddle shape function. [2]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;applications&quot;&gt;Applications&lt;/h2&gt;

&lt;p&gt;Using the feature that the Hessian emphasizes the gradient change, it can be used as a filter that detects the contour (edge) of a specific object in a given image, which is considered as a function at this point. Figure 4 shows the description of edge detection and the Hessian’s eigenvalues, and Figure 5 shows an application detecting the vessel using the Hessian.&lt;/p&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-07-21-geometric meaning of hessian/application 02.png&quot; width=&quot;60%&quot; /&gt;   &lt;figcaption&gt;
Figure 4. Edge detection using Hessian's eigenvalues [3]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-07-21-geometric meaning of hessian/application 01.png&quot; width=&quot;60%&quot; /&gt;   &lt;figcaption&gt;
Figure 5. Hessian's applicaiton: Frangi filter for vessel detection. [2]
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;[1] “Hessian matrix,” Wikipedia, 24-Jun-2020. [Online]. Available: https://en.wikipedia.org/wiki/Hessian_matrix. [Accessed: 21-Jul-2020].&lt;/p&gt;

&lt;p&gt;[2] Y. D. Yeo, “Geometrical meaning of Hessian Matrix,” 17-Jun-2020. [Online]. Available: https://angeloyeo.github.io/2020/06/17/Hessian.html. [Accessed: 21-Jul-2020].&lt;/p&gt;

&lt;p&gt;[3] “Hessian Matrix of the image,” Stack Overflow, 01-Sep-1963. [Online]. Available: https://stackoverflow.com/questions/22378360/hessian-matrix-of-the-image. [Accessed: 21-Jul-2020].&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Jul 2020 00:00:00 -0500</pubDate>
      </item>
    
      <item>
        <title>(TF) Which Layer Do I Need?</title>
        <link>/research/ml&dl/2020/07/20/how-to-choose-layer.html</link>
        <guid isPermaLink="true">/research/ml&dl/2020/07/20/how-to-choose-layer.html</guid>
        <description>&lt;p&gt;The structure of the deep learning model is designed differently depending on the types of data features and the objective of the model. More specifically, in order to select the type of layer used in the model, the characteristics of data features and the learning objectives of the model must be considered.&lt;/p&gt;

&lt;p&gt;In order to find out which structure is most suitable, we experimented with fixing the type of dataset and the target of the model and changing the structure of the model. The dataset used in the experiment is MNIST. The types of models used in the experiment were as follows; &lt;em&gt;DenseNet&lt;/em&gt; using only &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/keras/layers/Dense&quot;&gt;dense layer&lt;/a&gt;, &lt;em&gt;ConvNet&lt;/em&gt; using &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv2D&quot;&gt;convolutional layer&lt;/a&gt;, and &lt;em&gt;LstmNet&lt;/em&gt; using &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/keras/layers/LSTM&quot;&gt;LSTM layer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Full code of the experiments can be found at the following github repository.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jhyun0919/deep_dive_into_tensorflow/blob/master/tutorials/MNIST/how%20to%20choose%20layer.ipynb&quot;&gt;Park’s GitHub &amp;gt; How to choose layer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This post was written with reference to the following materials.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/aymericdamien/TensorFlow-Examples/blob/master/tensorflow_v2/notebooks/3_NeuralNetworks/neural_network.ipynb&quot;&gt;Aymeric Damien’s GitHub &amp;gt; Neural Network Example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/aymericdamien/TensorFlow-Examples/blob/master/tensorflow_v2/notebooks/3_NeuralNetworks/convolutional_network.ipynb&quot;&gt;Aymeric Damien’s GitHub &amp;gt; Convolutional Neural Network Example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/intuitively-understanding-convolutions-for-deep-learning-1f6f42faee1&quot;&gt;Irhum Shafkat’s Medium posting &amp;gt; Intuitively Understanding Convolutions for Deep Learning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/aymericdamien/TensorFlow-Examples/blob/master/tensorflow_v2/notebooks/3_NeuralNetworks/recurrent_network.ipynb&quot;&gt;Aymeric Damien’s GitHub &amp;gt; Recurrent Neural Network Example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.simplilearn.com/tutorials/deep-learning-tutorial/rnn&quot;&gt;Simplilearn &amp;gt; Recurrent Neural Network Tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/JiHyunPark18/understanding-lstm-and-its-diagrams&quot;&gt;Park’s SlideShare &amp;gt; Understanding LSTM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;model-structures&quot;&gt;Model Structures&lt;/h1&gt;
&lt;h2 id=&quot;dense-model&quot;&gt;Dense Model&lt;/h2&gt;

&lt;p&gt;This model consisted only of dense layers. This is the simplest model of the neural network and works well for all types of data, but performance decreases when an input data becomes complicated or large. Therefore, dense layers are used in learning simple data. In addition, in the case of learning complex data, dense layers are used in the last part of the model, which is the stage where features are extracted and get simple enough.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/ff71e7f4416a2add611074ad39888eab.js&quot;&gt;&lt;/script&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;cnn-model&quot;&gt;CNN Model&lt;/h2&gt;

&lt;p&gt;This model consisted of convolutional layers. This model is suitable when there are spatial relationship across the data. Figure 1 depicts how a convolutional layer works, and it helps understand why this model works well when there are spatial relationship across data.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/1043aeb7181b81ac0106d0bbcc0f74d3.js&quot;&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-07-20-how to choose layer/cnn visualized.gif&quot; width=&quot;50%&quot; /&gt;   &lt;figcaption&gt;
Figure 1. Visualization of how the convolutional neural network layer works [1].
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;rnnlstm-model&quot;&gt;RNN(LSTM) Model&lt;/h2&gt;

&lt;p&gt;This model consisted of LSTM layers. This model is suitable when there are temporal (sequential) relationship across the data. Figure 2 depicts how a LSTM layer works, and it helps understand why this model works well when there are temporal relationship across data.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/f6d3f2c79049c74b6a74b6b792e20ba7.js&quot;&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-07-20-how to choose layer/rnn visualized.gif&quot; width=&quot;60%&quot; /&gt;   &lt;figcaption&gt;
Figure 2. Visualization of how the recurrent neural network layer works [2].
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;experiment-result&quot;&gt;Experiment Result&lt;/h1&gt;

&lt;p&gt;As a result of the experiment, the CNN model using a convolutional layer showed the highest performance for learning MNIST image data. Direct comparison was not possible because the number of trainable parameters differed for each model, but the result was obtained by adjusting hyper-parameters to obtain the best performance for each model.&lt;/p&gt;

&lt;p&gt;To sum up, we have confirmed that it is best to use a convolutional layer when learning MNIST image data.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: right&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Accuracy&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Loss&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;DenseNet&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.9556&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1.5092&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;ConvNet&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;0.9817&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;1.4793&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;LstmNet&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.9603&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1.5015&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;figure align=&quot;center&quot;&gt;
&lt;img src=&quot;https://jhyun0919.github.io/assets/img/2020-07-20-how to choose layer/tensorboard result.png&quot; width=&quot;95%&quot; /&gt;   &lt;figcaption&gt;
Figure 2. Checking the validation result with tensorboard.
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;future-study&quot;&gt;Future Study&lt;/h1&gt;

&lt;p&gt;In some cases, such as image data or stock data, we can know the nature of the feature data in advance and use the CNN or RNN layers respectively. However, it is difficult to fully understand the charactieristic of completely new feature data. In this case, it is difficult to make assumptions about the temporal/spatial relationships across the data. As a result, it is not easy to decide which layer to use.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tensorflow.org/tutorials/text/transformer&quot;&gt;Transformer&lt;/a&gt; is a model designed to solve this problem. Transformer is a model based on attention, it make no assumptions about the temporal/spatial relationships across the data [3]. In the next posting, we will discuss the structure and application of the Transformer.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;[1]I. Shafkat, “Intuitively Understanding Convolutions for Deep Learning,” Medium, 07-Jun-2018. [Online]. Available: https://towardsdatascience.com/intuitively-understanding-convolutions-for-deep-learning-1f6f42faee1. [Accessed: 23-Jul-2020].&lt;/p&gt;

&lt;p&gt;[2] A. Biswal, “Recurrent Neural Network Tutorial,” Simplilearn.com, 28-Apr-2020. [Online]. Available: https://www.simplilearn.com/tutorials/deep-learning-tutorial/rnn. [Accessed: 23-Jul-2020].&lt;/p&gt;

&lt;p&gt;[3] “Transformer model for language understanding : TensorFlow Core,” TensorFlow. [Online]. Available: https://www.tensorflow.org/tutorials/text/transformer. [Accessed: 23-Jul-2020].&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Jul 2020 00:00:00 -0500</pubDate>
      </item>
    
      <item>
        <title>(PyTorch) Basic Steps for Training a Model</title>
        <link>/research/ml&dl/2020/07/19/pytorch-basic-structure.html</link>
        <guid isPermaLink="true">/research/ml&dl/2020/07/19/pytorch-basic-structure.html</guid>
        <description>&lt;p&gt;PyTorch is one of the most well-known deep learning frameworks as well as Tensorflow. This posting will describe the basic steps for traing a model with PyTorch. Briefly, the basic steps of how to train a model are as follow.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Load &amp;amp; pre-process the dataset&lt;/li&gt;
  &lt;li&gt;Set a model&lt;/li&gt;
  &lt;li&gt;Set an optimizer &amp;amp; a loss function&lt;/li&gt;
  &lt;li&gt;Train the model&lt;/li&gt;
  &lt;li&gt;Evaluate the model&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Full code can be found at the following github repository.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jhyun0919/deep_dive_into_pytorch/blob/master/tutorials/01.%20basic/pytorch%20basic%20structure.ipynb&quot;&gt;Park’s GitHub &amp;gt; Basic Structure of Training a Model&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This post was written with reference to the following materials.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@inmoonlight/pytorch%EB%A1%9C-%EB%94%A5%EB%9F%AC%EB%8B%9D%ED%95%98%EA%B8%B0-intro-afd9c67404c3&quot;&gt;JiHyung Moon’s Meduim Posting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pytorch.org/tutorials/intermediate/tensorboard_tutorial.html&quot;&gt;PyTorch official webpage &amp;gt; Tutorials &amp;gt; Visualizing Models, Data, and Training with TensorBoard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;1-load--pre-process-the-dataset&quot;&gt;1. Load &amp;amp; pre-process the dataset&lt;/h1&gt;

&lt;p&gt;We used the &lt;em&gt;FashionMNIST&lt;/em&gt; dataset for the experiment. The dataset can be downloaded through &lt;em&gt;torchvision.datasets&lt;/em&gt;, and preprocessing can be performed through &lt;em&gt;transforms.Compose&lt;/em&gt;.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/6bd4ac356c46bfc7efe42e664ab83403.js&quot;&gt;&lt;/script&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-set-a-model&quot;&gt;2. Set a model&lt;/h1&gt;

&lt;p&gt;We constructed a simple convolutional neural network model.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/5023e2b1d56c0fe89961ba09ef192476.js&quot;&gt;&lt;/script&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;3-set-optimizer--loss-function&quot;&gt;3. Set optimizer &amp;amp; loss function&lt;/h1&gt;

&lt;p&gt;We set the optimizer and loss function to train the model constructed in the previous step. The optimizer and loss function types were selected according to the type of the features of the given input data and the purpose of the model.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/e916c7736f96b4c5df111d81bece262e.js&quot;&gt;&lt;/script&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;4-train-the-model&quot;&gt;4. Train the model&lt;/h1&gt;

&lt;p&gt;In order to train a model, we must follow the following 5 steps.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;initialize the gradient&lt;/li&gt;
  &lt;li&gt;forward propagation&lt;/li&gt;
  &lt;li&gt;calculate the loss&lt;/li&gt;
  &lt;li&gt;backward propagation&lt;/li&gt;
  &lt;li&gt;optimize (update) the weights based on forward &amp;amp; backward propagation&lt;/li&gt;
&lt;/ol&gt;

&lt;p align=&quot;center&quot;&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/93422cef8d6be9df23b2c8ecc55dc918.js&quot;&gt;&lt;/script&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;5-evaluate-the-model&quot;&gt;5. Evaluate the model&lt;/h1&gt;

&lt;p&gt;We used the validation dataset to measure the performance of the completed training model. Note that the evaluate process is very similar to the training process. However, in the evaluate process, &lt;em&gt;torch.no_grad()&lt;/em&gt; is required because the weights must never change.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;  &lt;script src=&quot;https://gist.github.com/jhyun0919/5cb29e6e63d6c0a68a70742b2a1eba9d.js&quot;&gt;&lt;/script&gt;
&lt;/p&gt;

</description>
        <pubDate>Sun, 19 Jul 2020 00:00:00 -0500</pubDate>
      </item>
    
  </channel>
</rss>
